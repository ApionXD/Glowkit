From 6f7c52c2d6d5306bd78ae5eeb975c70c899ddcc9 Mon Sep 17 00:00:00 2001
From: mastercoms <mastercoms@tutanota.de>
Date: Mon, 29 Jan 2018 11:54:32 -0500
Subject: [PATCH] Fix Javadocs


diff --git a/src/main/java/com/destroystokyo/paper/event/profile/ProfileWhitelistVerifyEvent.java b/src/main/java/com/destroystokyo/paper/event/profile/ProfileWhitelistVerifyEvent.java
index a11f811e..7dc9f9b1 100644
--- a/src/main/java/com/destroystokyo/paper/event/profile/ProfileWhitelistVerifyEvent.java
+++ b/src/main/java/com/destroystokyo/paper/event/profile/ProfileWhitelistVerifyEvent.java
@@ -52,6 +52,8 @@ public class ProfileWhitelistVerifyEvent extends Event {
 
     /**
      * Gets the currently planned message to send to the user if they are not whitelisted
+     *
+     * @return The kick message
      */
     public String getKickMessage() {
         return kickMessage;
@@ -73,6 +75,8 @@ public class ProfileWhitelistVerifyEvent extends Event {
 
     /**
      * Whether the player is whitelisted to play on this server (whitelist may be off is why its true)
+     *
+     * @return If the player is whitelisted
      */
     public boolean isWhitelisted() {
         return whitelisted;
@@ -80,6 +84,8 @@ public class ProfileWhitelistVerifyEvent extends Event {
 
     /**
      * Changes the players whitelisted state. false will deny the login
+     *
+     * @param whitelisted If the player is whitelisted
      */
     public void setWhitelisted(boolean whitelisted) {
         this.whitelisted = whitelisted;
@@ -87,6 +93,8 @@ public class ProfileWhitelistVerifyEvent extends Event {
 
     /**
      * Returns if the player obtained whitelist status by having op
+     *
+     * @return If the player has op
      */
     public boolean isOp() {
         return isOp;
@@ -94,6 +102,8 @@ public class ProfileWhitelistVerifyEvent extends Event {
 
     /**
      * Returns if the server even has whitelist on
+     *
+     * @return If the whitelist is enabled
      */
     public boolean isWhitelistEnabled() {
         return whitelistEnabled;
diff --git a/src/main/java/com/destroystokyo/paper/event/server/AsyncTabCompleteEvent.java b/src/main/java/com/destroystokyo/paper/event/server/AsyncTabCompleteEvent.java
index 3071320e..07524719 100644
--- a/src/main/java/com/destroystokyo/paper/event/server/AsyncTabCompleteEvent.java
+++ b/src/main/java/com/destroystokyo/paper/event/server/AsyncTabCompleteEvent.java
@@ -135,7 +135,7 @@ public class AsyncTabCompleteEvent extends Event implements Cancellable {
      * If true, the standard process of calling {@link Command#tabComplete(CommandSender, String, String[])}
      * or current player names will not be called.
      *
-     * @param handled
+     * @param handled If this tab complete request has already been handled
      */
     public void setHandled(boolean handled) {
         this.handled = handled;
@@ -151,7 +151,8 @@ public class AsyncTabCompleteEvent extends Event implements Cancellable {
 
     /**
      * Will provide no completions, and will not fire the synchronous process
-     * @param cancelled
+     *
+     * @param cancelled If the tab complete is cancelled
      */
     @Override
     public void setCancelled(boolean cancelled) {
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index d929f608..fcf171e0 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -1077,8 +1077,8 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      *
      * Can also be called with {@link #giveExp(int, boolean)} by passing true to applyMending
      *
-     * @param amount
-     * @return
+     * @param amount The amount to mend by
+     * @return The mend amount remaining that was not used to repair
      */
     public int applyMending(int amount);
     // Paper end
-- 
2.18.0.windows.1

