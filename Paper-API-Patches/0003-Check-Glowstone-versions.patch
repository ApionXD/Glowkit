From 55e4a9e593367a086295490f702061adc387c239 Mon Sep 17 00:00:00 2001
From: mastercoms <circuitsoft@tuta.io>
Date: Sun, 12 Jun 2016 10:50:15 -0400
Subject: [PATCH] Check Glowstone versions


diff --git a/src/main/java/org/bukkit/command/defaults/VersionCommand.java b/src/main/java/org/bukkit/command/defaults/VersionCommand.java
index 0790f3c..dd7c440 100644
--- a/src/main/java/org/bukkit/command/defaults/VersionCommand.java
+++ b/src/main/java/org/bukkit/command/defaults/VersionCommand.java
@@ -1,10 +1,7 @@
 package org.bukkit.command.defaults;
 
 import com.google.common.base.Charsets;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
+import com.google.common.collect.ImmutableList;
 import org.apache.commons.lang.Validate;
 import org.bukkit.Bukkit;
 import org.bukkit.ChatColor;
@@ -12,26 +9,17 @@ import org.bukkit.command.CommandSender;
 import org.bukkit.plugin.Plugin;
 import org.bukkit.plugin.PluginDescriptionFile;
 import org.bukkit.util.StringUtil;
-
-import com.google.common.collect.ImmutableList;
-import com.google.common.io.Resources;
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.net.URL;
-import java.net.URLEncoder;
-import java.util.HashSet;
-import java.util.Set;
-import java.util.concurrent.locks.ReentrantLock;
-import java.util.logging.Level;
-import java.util.logging.Logger;
 import org.json.simple.JSONObject;
 import org.json.simple.parser.JSONParser;
 import org.json.simple.parser.ParseException;
 
-// Paper start
+import java.io.BufferedReader;
+import java.io.IOException;
 import java.io.InputStreamReader;
 import java.net.HttpURLConnection;
-// Paper end
+import java.net.URL;
+import java.util.*;
+import java.util.concurrent.locks.ReentrantLock;
 
 public class VersionCommand extends BukkitCommand {
     public VersionCommand(String name) {
@@ -174,26 +162,19 @@ public class VersionCommand extends BukkitCommand {
             sender.sendMessage("Checking version, please wait...");
             if (!versionTaskStarted) {
                 versionTaskStarted = true;
-                new Thread(new Runnable() {
-
-                    @Override
-                    public void run() {
-                        obtainVersion();
-                    }
-                }).start();
+                new Thread(this::obtainVersion).start();
             }
         } finally {
             versionLock.unlock();
         }
     }
 
-    // Paper start
     private void obtainVersion() {
         String version = Bukkit.getVersion();
         if (version == null) version = "Custom";
-        if (version.startsWith("git-Paper-")) {
-            String[] parts = version.substring("git-Paper-".length()).split("[-\\s]");
-            int distance = getDistance(null, parts[0]);
+        if (Bukkit.getName().startsWith("Glowstone")) {
+            String[] parts = version.replace("\"", "").split("-");
+            int distance = getDistance("GlowstoneMC/GlowstonePlusPlus", parts[2]);
             switch (distance) {
                 case -1:
                     setVersionMessage("Error obtaining version information");
@@ -208,7 +189,6 @@ public class VersionCommand extends BukkitCommand {
                     setVersionMessage("You are " + distance + " version(s) behind");
             }
         } else if (version.startsWith("git-Bukkit-")) {
-            // Paper end
             version = version.substring("git-Bukkit-".length());
             int cbVersions = getDistance("craftbukkit", version.substring(0, version.indexOf(' ')));
             if (cbVersions == -1) {
@@ -241,51 +221,9 @@ public class VersionCommand extends BukkitCommand {
         }
     }
 
-    // Paper start
     private static int getDistance(String repo, String verInfo) {
-        try {
-            int currentVer = Integer.decode(verInfo);
-            return getFromJenkins(currentVer);
-        } catch (NumberFormatException ex) {
-            verInfo = verInfo.replace("\"", "");
-            return getFromRepo("PaperMC/Paper", verInfo);
-        }
-            /*
-            BufferedReader reader = Resources.asCharSource(
-                    new URL("https://hub.spigotmc.org/stash/rest/api/1.0/projects/SPIGOT/repos/" + repo + "/commits?since=" + URLEncoder.encode(hash, "UTF-8") + "&withCounts=true"),
-                    Charsets.UTF_8
-            ).openBufferedStream();
-            try {
-                JSONObject obj = (JSONObject) new JSONParser().parse(reader);
-                return ((Number) obj.get("totalCount")).intValue();
-            } catch (ParseException ex) {
-                ex.printStackTrace();
-                return -1;
-            } finally {
-                reader.close();
-            }
-            */
-    }
-
-    private static int getFromJenkins(int currentVer) {
-        try {
-            BufferedReader reader = Resources.asCharSource(
-                    new URL("https://ci.destroystokyo.com/job/PaperSpigot/lastSuccessfulBuild/buildNumber"), // Paper
-                    Charsets.UTF_8
-            ).openBufferedStream();
-            try {
-                int newVer = Integer.decode(reader.readLine());
-                return newVer - currentVer;
-            } catch (NumberFormatException ex) {
-                ex.printStackTrace();
-                return -2;
-            } finally {
-                reader.close();
-            }
-        } catch (IOException e) {
-            e.printStackTrace();
-            return -1;
-        }
+        verInfo = verInfo.replace("\"", "");
+        return getFromRepo(repo, verInfo);
     }
 
     // Contributed by Techcable <Techcable@outlook.com> in GH PR #65
@@ -317,5 +255,4 @@ public class VersionCommand extends BukkitCommand {
             return -1;
         }
     }
-    // Paper end
 }
-- 
2.9.0.windows.1

